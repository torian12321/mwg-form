@import "./_animations.scss";
@import "./_background.scss";
@import "./_border-radius.scss";
@import "./_breakpoints.scss";
@import "./_clearfix.scss";
@import "./_filters.scss";
@import "./_flex.scss";
@import "./_font-size.scss";
@import "./_oneLineText.scss";
@import "./_placeholder.scss";
@import "./_smart-colors.scss";
@import "./_transform.scss";
@import "./_triangle.scss";
@import "./_visually-hidden.scss";

//-------------------
//-- Generic mixins -
//-------------------
@mixin css3-prefix ($property, $values...) {
  -webkit-#{$property} : #{$values};  /* Chrome, Safari, Opera */
    -khtml-#{$property}: #{$values};
      -moz-#{$property}: #{$values};  /* Firefox all */
      -ms-#{$property} : #{$values};  /* IE 9 */
        -o-#{$property}: #{$values};
          #{$property} : #{$values};  /* Likely future */
}

@mixin transition (
  $property: all,
  $time    : .5s,
  $timing  : ease-out,
  $delay   : false,
  $merge   : true
) {
  @if ($delay != false) {
    -webkit-transition-delay: $delay;
    transition-delay        : $delay;
  }
  -webkit-transition: $property $timing $time;
  transition        : $property $timing $time;
}

@mixin border (
  $width: $border-width,
  $color: $border-color,
  $style: $border-style
){
  border: $width $color $style;
}

@mixin opacity($value) {
  @include css3-prefix('opacity', $value);

  // IE8 filter
  $IEValue: $value*100;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
}

@mixin shadow ($shadows...) {
  @if($shadows = "") {
    $shadows: $shadow;
  }
  @include css3-prefix('box-shadow', $shadows);
}

@mixin userSelect($select: text){
  // text | none | all
  @include css3-prefix('user-select', $select);
}

@mixin sticky($top: -1px){
  position: -webkit-sticky;
  position: -moz-sticky;
  position: -ms-sticky;
  position: -o-sticky;
  position: sticky;
  top     : $top;
}
